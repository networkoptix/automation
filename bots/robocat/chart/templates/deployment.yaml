{{- $volumeName := print .Chart.Name "-" (tpl .Values.persistence.existingClaim .) -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "workflow-police-robocat.fullname" . }}
  labels:
    {{- include "workflow-police-robocat.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "workflow-police-robocat.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "workflow-police-robocat.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "workflow-police-robocat.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: fix-volume-permissions
          image: "webuni/openssh"
          securityContext:
            runAsUser: 0
          command:
            - 'sh'
            - '-c'
            - |
              if [ "{{ .Values.persistence.wipeData }}" == 'true' ]; then
                echo 'Wiping data as wipeData is {{ .Values.persistence.wipeData }}'
                rm -rf /tmp/data/*
              fi
              chmod 700 /tmp/.ssh
              install -m 600 -o {{ .Values.podSecurityContext.runAsUser }} -g {{ .Values.podSecurityContext.runAsGroup }} /tmp/.ssh-secret/id_rsa /tmp/.ssh
              ssh-keyscan {{ .Values.repositoryServer }} > /tmp/.ssh/known_hosts
              chown -R {{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.runAsGroup }} /tmp/.ssh
              chown -R {{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.runAsGroup }} /tmp/data

          volumeMounts:
            - name: data
              mountPath: /tmp/data
            - name: ssh-key
              mountPath: /tmp/.ssh
            - name: ssh-secret
              mountPath: /tmp/.ssh-secret
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - '--log-level={{ .Values.logLevel | default "INFO" }}'
            - '--mode={{ .Values.workingMode | default "webhook" }}'
            - '--project-id={{ .Values.gitlabProjectId }}'
            {{- if .Values.gelfServer }}
            - '--graylog={{ .Values.gelfServer }}'
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: gitlab-config
            mountPath: /etc/python-gitlab.cfg
            subPath: python-gitlab.cfg
          - name: robocat-config
            mountPath: /workdir/config.yaml
            subPath: config.yaml
          - name: data
            mountPath: /var/workflow_robocat
          - name: ssh-key
            mountPath: /home/workflow-robocat/.ssh
          ports:
          - name: http
            containerPort: {{ .Values.service.backendPort }}
          env:
          - name: GL_SECRET
            value: {{ .Values.webHookSecret }}
          {{- if eq (.Values.workingMode | default "webhook") "webhook" }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          {{- end }}
      volumes:
      - name: gitlab-config
        secret:
          secretName: {{ .Chart.Name }}-{{ .Release.Name }}-config
          items:
          - key: python-gitlab.cfg
            path: python-gitlab.cfg
      - name: ssh-secret
        secret:
          secretName: {{ .Chart.Name }}-{{ .Release.Name }}-key
      - name: robocat-config
        secret:
          secretName: {{ .Chart.Name }}-{{ .Release.Name }}-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: data
        persistentVolumeClaim:
          claimName: {{ $volumeName }}
      - name: ssh-key
        emptyDir: {}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
